{"version":3,"sources":["context/data.js","components/Preview/index.js","components/Preview/Image.js","components/SelectImages/SelectImages.js","components/SelectSizes/SelectSizes.js","components/UploadFiles/UploadFiles.js","components/CreateImg/helpers.js","components/CreateImg/CreateImgCanvas.js","components/CreateImg/CreateImg.js","components/Download/Download.js","entries/Creatives.js","index.js"],"names":["Context","createContext","ImagesContext","SizesContext","Set","CanvasesContext","ActionsContext","Provider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","images","setImages","_useState3","_useState4","sizes","setSizes","_useState5","_useState6","canvases","setCanvases","value","actions","toggleSize","inputSize","newSizes","delete","add","addCanvases","inputCanvases","prev","concat","toConsumableArray","react_default","a","createElement","Preview","Image","useContext","Data","map","image","src","url","key","alt","SelectImages","components_UploadFiles_UploadFiles","onUploadFiles","files","file","window","URL","createObjectURL","SIZES","height","width","SelectSizes","size","i","type","name","onChange","e","IMAGE_FORMATS","freeze","UploadFiles","multiple","accept","formats","filteredImages","target","Array","from","filter","has","placeholder","fit","cover","parentWidth","parentHeight","childWidth","childHeight","doRatio","cRatio","x","y","CreateImgCanvas","_ref3","onCanvasCreate","canvasEl","useRef","ctx","setCtx","useEffect","current","getContext","imageEl","addEventListener","_cover","naturalWidth","naturalHeight","drawImage","loadImg","ref","onClick","_ref2","_ref2$filename","filename","link","document","href","download","click","downloadFromUrl","HTMLCanvasElement","prototype","toDataURL","call","role","aria-label","CreateImg","_useContext","j","CreateImg_CreateImgCanvas","Downloaad","zip","JSZip","generations","canvas","Promise","resolve","cb","blob","base64","toBlob","all","then","generateAsync","content","saveAs","Creatives","data_namespaceObject","className","components_SelectSizes_SelectSizes","components_SelectImages_SelectImages","components_CreateImg_CreateImg","Download","rootElement","getElementById","ReactDOM","render","entries_Creatives"],"mappings":"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","file":"static/js/main.3d2b92a8.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react'\n\nconst Context = createContext({})\nconst ImagesContext = createContext([])\nconst SizesContext = createContext(new Set())\nconst CanvasesContext = createContext([])\nconst ActionsContext = createContext({})\n\nconst Provider = ({ children }) => {\n  const [images, setImages] = useState([])\n  const [sizes, setSizes] = useState(new Set())\n  const [canvases, setCanvases] = useState(new Set())\n\n  const toggleSize = (inputSize) => {\n    setSizes(sizes => {\n      const newSizes = new Set(sizes)\n      newSizes.delete(inputSize) || newSizes.add(inputSize)\n      return newSizes\n    })\n  }\n\n  const addCanvases = (inputCanvases) => {\n    setCanvases(prev => {\n      return [\n        ...prev, ...inputCanvases\n      ]\n    })\n  }\n\n  const value = {\n    images, sizes, canvases\n  }\n\n  const actions = {\n    setImages, toggleSize, setSizes, setCanvases, addCanvases\n  }\n\n  return (\n    <Context.Provider value={value}>\n      <ImagesContext.Provider value={images}>\n        <SizesContext.Provider value={sizes}>\n          <CanvasesContext.Provider value={canvases}>\n            <ActionsContext.Provider value={actions}>\n              {children}\n            </ActionsContext.Provider>\n          </CanvasesContext.Provider>\n        </SizesContext.Provider>\n      </ImagesContext.Provider>\n    </Context.Provider>\n  )\n}\n\nexport {\n  Context,\n  ImagesContext,\n  SizesContext,\n  CanvasesContext,\n  ActionsContext,\n  Provider\n}\n","import { default as Image } from './Image'\n\nexport const Preview = {\n  Image\n}","import React, { useContext } from 'react'\nimport { Data } from 'context'\n\nconst PreviewImages = () => {\n  const { images } = useContext(Data.Context)\n\n  return (\n    <div>\n      {images.map(image => (\n        <img\n          src={image.url}\n          key={image.url}\n          alt=\"\"\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default PreviewImages\n","import React, { useContext } from 'react'\nimport { Data } from 'context'\nimport { UploadFiles } from 'components'\n\nconst SelectImages = () => {\n  const { setImages } = useContext(Data.ActionsContext)\n\n  const onUploadFiles = files => {\n    setImages(\n      files.map(file => ({\n        file,\n        url: window.URL.createObjectURL(file)\n      }))\n    )\n  }\n\n  return (\n    <div>\n      <UploadFiles\n        onUploadFiles={onUploadFiles}\n      />\n    </div>\n  )\n}\n\nexport default SelectImages\n","import React, { useContext } from 'react'\nimport { Data } from 'context'\n\nconst SIZES = [\n  {\n    height: 300,\n    width: 300\n  },\n  {\n    height: 500,\n    width: 500\n  },\n  {\n    height: 1000,\n    width: 200\n  },\n  {\n    height: 200,\n    width: 1000\n  }\n]\n\nconst SelectSizes = () => {\n  const { toggleSize } = useContext(Data.ActionsContext)\n\n  return (\n    <div>\n      {\n        SIZES.map((size, i) => (\n          <label key={i}>\n            <input\n              type='checkbox'\n              name='sizes'\n              value={i}\n              onChange={e => toggleSize(SIZES[i])}\n            />\n            <span>{ size.width } x { size.height }</span>\n          </label>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default SelectSizes\n","import React from 'react'\n\nconst IMAGE_FORMATS = Object.freeze(new Set(['image/png', 'image/jpeg']))\n\nconst filterFormats = (files, formats) => {\n  return Array.from(files).filter(file => formats.has(file.type))\n}\n\nconst UploadFiles = ({\n  onUploadFiles\n}) => {\n  const onInputChange = e => {\n    const filteredImages = filterFormats(e.target.files, IMAGE_FORMATS)\n    onUploadFiles(filteredImages)\n  }\n\n  return (\n    <input\n      type=\"file\"\n      multiple\n      accept=\"image/*\"\n      onChange={onInputChange}\n      placeholder=\"load imgs\"\n    />\n  )\n}\n\nexport default UploadFiles\n","function fit (cover) {\n\treturn (parentWidth, parentHeight, childWidth, childHeight) => {\n\t\tconst doRatio = childWidth / childHeight;\n\t\tconst cRatio = parentWidth / parentHeight;\n\t\tlet width = parentWidth;\n\t\tlet height = parentHeight;\n\n\t\tif (cover ? (doRatio > cRatio) : (doRatio < cRatio)) {\n\t\t\theight = width / doRatio;\n\t\t} else {\n\t\t\twidth = height * doRatio;\n\t\t}\n\n\t\treturn {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tx: (parentWidth - width) / 2,\n\t\t\ty: (parentHeight - height) / 2\n\t\t};\n\t};\n}\n\nexport const contain = fit(false)\nexport const cover = fit(true)","import React, { useState, useRef, useEffect } from 'react'\nimport { cover } from './helpers'\n\nconst loadImg = ({\n  image,\n  ctx,\n  size\n}) => {\n  const imageEl = new Image()\n  imageEl.src = image.url\n\n  imageEl.addEventListener('load', () => {\n    const {\n      x, \n      y, \n      width, \n      height\n    } =  cover(\n      imageEl.naturalWidth,\n      imageEl.naturalHeight,\n      size.width,\n      size.height\n    )\n    \n    ctx.drawImage(\n      imageEl,\n      x,\n      y, \n      width, \n      height,\n      0,\n      0,\n      size.width,\n      size.height\n    )\n  })\n}\n\nconst getDataUrl = (ref) => {\n  return HTMLCanvasElement.prototype.toDataURL.call(ref.current)\n}\n\nconst downloadFromUrl = ({\n  url,\n  filename = 'file',\n  onCanvasCreate\n}) => {\n  const link = document.createElement('a')\n  link.href = url\n  link.download = filename\n  link.click()\n}\n\nconst CreateImgCanvas = ({\n  image,\n  size,\n  onCanvasCreate\n}) => {\n  const canvasEl = useRef(null)\n  const [ctx, setCtx] = useState(null)\n\n\n  useEffect(() => {\n    if (canvasEl) {\n      setCtx(canvasEl.current.getContext('2d'))\n    }\n  }, [canvasEl])\n\n  useEffect(() => {\n    if (image && size && ctx) {\n      loadImg({\n        image,\n        size,\n        ctx\n      })\n      onCanvasCreate([canvasEl])\n    }\n  }, [image, size, ctx])\n\n  const onDownloadClick = () => {\n    const url = getDataUrl(canvasEl)\n    downloadFromUrl({\n      url,\n      filename: 'image'\n    })\n  }\n\n  return (\n    <div>\n      <canvas\n        ref={canvasEl}\n        width={size.width}\n        height={size.height}\n      />\n      <button\n        onClick={onDownloadClick}\n      >\n        <span role='img' aria-label='download'>📥</span>\n      </button>\n    </div>\n  )\n}\n\nexport default CreateImgCanvas\n","import React, { useContext, useEffect } from 'react'\nimport { Data } from 'context'\nimport CreateImgCanvas from './CreateImgCanvas'\n\nconst CreateImg = () => {\n  const images = useContext(Data.ImagesContext)\n  const sizes = useContext(Data.SizesContext)\n  const { setCanvases, addCanvases } = useContext(Data.ActionsContext)\n\n  useEffect(() => {\n    setCanvases([])\n  }, [images, setCanvases])\n\n  return images.map((image, i) => (\n    Array.from(sizes).map((size, j) => {\n      return (\n        <CreateImgCanvas\n          key={`${i}_${j}`}\n          image={image}\n          size={size}\n          onCanvasCreate={addCanvases}\n        />\n      )\n    })\n  ))\n}\n\nexport default CreateImg\n","import React, { useContext } from 'react'\nimport { Data } from 'context'\nimport JSZip from 'jszip'\nimport { saveAs } from 'file-saver'\n\nconst Downloaad = () => {\n  const canvases = useContext(Data.CanvasesContext)\n\n  const genBlob = (ref, cb) => {\n    return HTMLCanvasElement.prototype.toBlob.call(ref.current, cb)\n  }\n\n  const onDownloadClick = () => {\n    const zip = new JSZip()\n\n    const generations = canvases.map((canvas, i) => {\n      return new Promise(resolve => {\n        genBlob(canvas, blob => {\n          zip.file(`image_${i}.png`, blob,  { base64: true })\n          resolve()\n        })\n      })\n    })\n\n    Promise.all(generations).then(() => {\n      zip.generateAsync({ type: 'blob' })\n        .then(content => {\n          saveAs(content, 'example.zip')\n        })\n    })\n  }\n\n  return (\n    <div>\n      <button onClick={onDownloadClick}>\n        Download\n      </button>\n    </div>\n  )\n}\n\nexport default Downloaad\n","import React from 'react'\n\nimport { Data } from 'context'\n\nimport {\n  CreateImg, SelectImages, SelectSizes, Preview, Download\n} from 'components'\n\nconst Creatives = () => {\n  return (\n    <Data.Provider>\n      <div className=\"raw\">\n        <SelectSizes />\n      </div>\n      <div className=\"raw\">\n        <SelectImages />\n      </div>\n      <div className=\"raw\">\n        <Preview.Image />\n      </div>\n      <div className=\"raw resultImages\">\n        <CreateImg />\n      </div>\n      <div className=\"raw\">\n        <Download />\n      </div>\n    </Data.Provider>\n  )\n}\n\nexport default Creatives\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './styles.css'\n\nimport { Creatives } from './entries'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Creatives />\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}